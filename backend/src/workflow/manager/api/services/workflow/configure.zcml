<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:plone="http://namespaces.plone.org/plone"
    xmlns:zcml="http://namespaces.zope.org/zcml"
    >
    
   <!-- GET /@workflows -> Lists all workflows -->
  <plone:service
      method="GET"
      name="@workflows"
      for="plone.restapi.bbb.IPloneSiteRoot"
      factory=".workflow.GetWorkflows"
      permission="cmf.ManagePortal"
      />

  <!-- POST /@workflows -> Adds a new workflow -->
  <plone:service
      method="POST"
      name="@workflows"
      for="plone.restapi.bbb.IPloneSiteRoot"
      factory=".workflow.AddWorkflow"
      permission="cmf.ManagePortal"
      />

  <!-- DELETE /@workflows/{workflow_id} -> Deletes a workflow -->
  <plone:service
      method="DELETE"
      name="@workflows"
      for="plone.restapi.bbb.IPloneSiteRoot"
      factory=".workflow.DeleteWorkflow"
      permission="cmf.ManagePortal"
      />

  <!-- POST /@workflows/{workflow_id}/@update-security -> Updates security mappings -->
  <plone:service
      method="POST"
      name="@update-security"
      for="plone.restapi.bbb.IPloneSiteRoot"
      factory=".workflow.UpdateSecuritySettings"
      permission="cmf.ManagePortal"
      />

  <!-- POST /@workflows/{workflow_id}/@assign -> Assigns workflow to a type -->
  <plone:service
      method="POST"
      name="@assign"
      for="plone.restapi.bbb.IPloneSiteRoot"
      factory=".workflow.AssignWorkflow"
      permission="cmf.ManagePortal"
      />

  <!-- GET /@workflows/{workflow_id}/@sanity-check -> Validates a workflow -->
  <plone:service
      method="GET"
      name="@sanity-check"
      for="plone.restapi.bbb.IPloneSiteRoot"
      factory=".workflow.SanityCheck"
      permission="cmf.ManagePortal"
      />

 <!-- GET /@workflows/{wid}/@states/{sid} -> Gets details for one state -->
  <plone:service
      method="GET"
      name="@states"
      for="plone.restapi.bbb.IPloneSiteRoot"
      factory=".state.EditState"
      permission="cmf.ManagePortal"
      />

  <!-- POST /@workflows/{wid}/@states -> Creates a new state -->
  <plone:service
      method="POST"
      name="@states"
      accept="application/json"
      for="plone.restapi.bbb.IPloneSiteRoot"
      factory=".state.AddState"
      permission="cmf.ManagePortal"
      />

  <!-- PATCH /@workflows/{wid}/@states/{sid} -> Updates an existing state -->
  <plone:service
      method="PATCH"
      name="@states"
      for="plone.restapi.bbb.IPloneSiteRoot"
      factory=".state.SaveState"
      permission="cmf.ManagePortal"
      />

  <!-- DELETE /@workflows/{wid}/@states/{sid} -> Deletes a state -->
  <plone:service
      method="DELETE"
      name="@states"
      for="plone.restapi.bbb.IPloneSiteRoot"
      factory=".state.DeleteState"
      permission="cmf.ManagePortal"
      />

  <!-- GET /@workflows/{wid}/@transitions/{tid} -> Gets details for one transition -->
  <plone:service
      method="GET"
      name="@transitions"
      for="Products.CMFCore.interfaces.IWorkflowAware"
      factory=".transition.EditTransition"
      permission="cmf.ManagePortal"
      />

  <!-- POST /@workflows/{wid}/@transitions -> Creates a new transition -->
  <plone:service
      method="POST"
      name="@transitions"
      for="Products.CMFCore.interfaces.IWorkflowAware"
      factory=".transition.AddTransition"
      permission="cmf.ManagePortal"
      />

  <!-- PATCH /@workflows/{wid}/@transitions/{tid} -> Updates an existing transition -->
  <plone:service
      method="PATCH"
      name="@transitions"
      for="Products.CMFCore.interfaces.IWorkflowAware"
      factory=".transition.SaveTransition"
      permission="cmf.ManagePortal"
      />

  <!-- DELETE /@workflows/{wid}/@transitions/{tid} -> Deletes a transition -->
  <plone:service
      method="DELETE"
      name="@transitions"
      for="Products.CMFCore.interfaces.IWorkflowAware"
      factory=".transition.DeleteTransition"
      permission="cmf.ManagePortal"
      />    

</configure>